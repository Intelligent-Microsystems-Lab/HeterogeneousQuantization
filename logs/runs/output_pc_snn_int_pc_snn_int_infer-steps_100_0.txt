Loading python/3.7.3
  Loading requirement: tcl/8.6.8 gcc/8.3.0
67197dba-5d61-459b-8e50-ddd68e251260
Namespace(alpha=0.95, architecture='2048-500-10', batch_size=128, beta=0.2, burn_in=30, data_set='NMNIST', epochs=20, gamma=1.15, infer_steps=100.0, l_rate=1e-06, log_file='logs/pc_snn_int_infer-steps.csv', seed=193012823, thr=1.0, w_scale=0.5)
Traceback (most recent call last):
  File "pc_snn.py", line 211, in <module>
    loss, opt_state, weights, biases = update_w(opt_state, x_train, y_train, next(itercount), args.alpha, args.gamma, args.beta, args.thr, layers, args.burn_in, args.infer_steps)
  File "pc_snn.py", line 128, in update_w
    x, loss, grad_w, grad_b = v_infer_pc(x_train, y_train, weights, biases, beta, alpha, gamma, thr, layers, burn_in, infer_steps)
  File "pc_snn.py", line 116, in infer_pc
    (t, x, f_n, f_p, mem, error, grad_w, grad_b), _ = lax.scan(f, init = (t, x, f_n, f_p, mem, error, grad_w, grad_b), xs = (sin, sout))
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/_src/lax/control_flow.py", line 1256, in scan
    init_flat, carry_avals, carry_avals_out, init_tree, *rest = _create_jaxpr(init)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/_src/lax/control_flow.py", line 1243, in _create_jaxpr
    jaxpr, consts, out_tree = _initial_style_jaxpr(f, in_tree, carry_avals + x_avals)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/_src/lax/control_flow.py", line 72, in _initial_style_jaxpr
    jaxpr, out_avals, consts, out_tree = _initial_style_open_jaxpr(fun, in_tree, in_avals)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/_src/lax/control_flow.py", line 67, in _initial_style_open_jaxpr
    jaxpr, out_avals, consts = pe.trace_to_jaxpr_dynamic(wrapped_fun, in_avals)
  File "pc_snn.py", line 86, in infer_one
    (x, f_n, f_p, mem, error), _ = lax.scan(f, init = (x, f_n, f_p, mem, error), xs = jnp.zeros(infer_steps))
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/_src/numpy/lax_numpy.py", line 2750, in zeros
    return lax.full(shape, 0, dtype)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/_src/lax/lax.py", line 1444, in full
    shape = canonicalize_shape(shape)
jax._src.traceback_util.FilteredStackTrace: TypeError: Shapes must be 1D sequences of concrete values of integer type, got (100.0,).

The stack trace above excludes JAX-internal frames.
The following is the original exception that occurred, unmodified.

--------------------

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "pc_snn.py", line 211, in <module>
    loss, opt_state, weights, biases = update_w(opt_state, x_train, y_train, next(itercount), args.alpha, args.gamma, args.beta, args.thr, layers, args.burn_in, args.infer_steps)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/_src/traceback_util.py", line 139, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/api.py", line 371, in f_jitted
    return cpp_jitted_f(*args, **kwargs)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/api.py", line 284, in cache_miss
    donated_invars=donated_invars)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/core.py", line 1229, in bind
    return call_bind(self, fun, *args, **params)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/core.py", line 1220, in call_bind
    outs = primitive.process(top_trace, fun, tracers, params)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/core.py", line 1232, in process
    return trace.process_call(self, fun, tracers, params)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/core.py", line 598, in process_call
    return primitive.impl(f, *tracers, **params)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/interpreters/xla.py", line 570, in _xla_call_impl
    *unsafe_map(arg_spec, args))
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/linear_util.py", line 251, in memoized_fun
    ans = call(fun, *args)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/interpreters/xla.py", line 645, in _xla_callable
    jaxpr, out_avals, consts = pe.trace_to_jaxpr_final(fun, abstract_args)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/interpreters/partial_eval.py", line 1230, in trace_to_jaxpr_final
    jaxpr, out_avals, consts = trace_to_subjaxpr_dynamic(fun, main, in_avals)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/interpreters/partial_eval.py", line 1211, in trace_to_subjaxpr_dynamic
    ans = fun.call_wrapped(*in_tracers)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/linear_util.py", line 160, in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
  File "pc_snn.py", line 128, in update_w
    x, loss, grad_w, grad_b = v_infer_pc(x_train, y_train, weights, biases, beta, alpha, gamma, thr, layers, burn_in, infer_steps)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/_src/traceback_util.py", line 139, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/api.py", line 1189, in batched_fun
    axis_name=axis_name)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/interpreters/batching.py", line 35, in batch
    return batched_fun.call_wrapped(*in_vals)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/linear_util.py", line 160, in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
  File "pc_snn.py", line 116, in infer_pc
    (t, x, f_n, f_p, mem, error, grad_w, grad_b), _ = lax.scan(f, init = (t, x, f_n, f_p, mem, error, grad_w, grad_b), xs = (sin, sout))
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/_src/lax/control_flow.py", line 1256, in scan
    init_flat, carry_avals, carry_avals_out, init_tree, *rest = _create_jaxpr(init)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/_src/lax/control_flow.py", line 1243, in _create_jaxpr
    jaxpr, consts, out_tree = _initial_style_jaxpr(f, in_tree, carry_avals + x_avals)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/_src/lax/control_flow.py", line 72, in _initial_style_jaxpr
    jaxpr, out_avals, consts, out_tree = _initial_style_open_jaxpr(fun, in_tree, in_avals)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/_src/lax/control_flow.py", line 67, in _initial_style_open_jaxpr
    jaxpr, out_avals, consts = pe.trace_to_jaxpr_dynamic(wrapped_fun, in_avals)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/interpreters/partial_eval.py", line 1201, in trace_to_jaxpr_dynamic
    jaxpr, out_avals, consts = trace_to_subjaxpr_dynamic(fun, main, in_avals)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/interpreters/partial_eval.py", line 1211, in trace_to_subjaxpr_dynamic
    ans = fun.call_wrapped(*in_tracers)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/linear_util.py", line 160, in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
  File "pc_snn.py", line 86, in infer_one
    (x, f_n, f_p, mem, error), _ = lax.scan(f, init = (x, f_n, f_p, mem, error), xs = jnp.zeros(infer_steps))
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/_src/numpy/lax_numpy.py", line 2750, in zeros
    return lax.full(shape, 0, dtype)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/_src/lax/lax.py", line 1444, in full
    shape = canonicalize_shape(shape)
  File "/afs/crc.nd.edu/user/c/cschaef6/.local/lib/python3.7/site-packages/jax/core.py", line 1158, in canonicalize_shape
    raise TypeError(msg.format(shape))
TypeError: Shapes must be 1D sequences of concrete values of integer type, got (100.0,).
Loading python/3.7.3
  Loading requirement: tcl/8.6.8 gcc/8.3.0
cbc6a2b9-6412-4046-99ac-09120ebddb2f
Namespace(alpha=0.95, architecture='2048-500-10', batch_size=128, beta=0.2, burn_in=30, data_set='NMNIST', epochs=20, gamma=1.15, infer_steps=100, l_rate=1e-06, log_file='logs/pc_snn_int_infer-steps.csv', seed=193012823, thr=1.0, w_scale=0.5)
Epoch 0 113.1846 0.0937 0.1112
Epoch 1 113.1846 0.1402 0.1664
Epoch 2 113.1846 0.1892 0.2086
Epoch 3 113.1845 0.2233 0.2432
Epoch 4 113.1842 0.2505 0.2723
Epoch 5 113.1838 0.2756 0.2989
Epoch 6 113.1839 0.3028 0.3196
Epoch 7 113.1844 0.3190 0.3313
Epoch 8 113.1847 0.3267 0.3291
Epoch 9 113.1846 0.3234 0.3294
Epoch 10 113.1840 0.3167 0.3187
Epoch 11 113.1847 0.3121 0.3098
Epoch 12 113.1842 0.3000 0.3022
Epoch 13 113.1845 0.2952 0.2939
Epoch 14 113.1844 0.2865 0.2891
Epoch 15 113.1840 0.2836 0.2833
Epoch 16 113.1847 0.2815 0.2807
Epoch 17 113.1840 0.2775 0.2757
Epoch 18 113.1847 0.2741 0.2729
Epoch 19 113.1845 0.2733 0.2730
